/**
 * Methods related to {@link Program} nodes.
 */
aspect Program {

	public void Program.addDeclarations(final Iterable<? extends Declaration> declarations) {
		for (Declaration declaration : declarations) {
			addDeclaration(declaration);
		}
	}

  /**
   * Merges two programs into a new program.
   *
   * @param program Program to be merged to this program.
   * @return The merged program.
   */
  syn Program Program.merge(Program program);

  eq Program.merge(Program program) {
    final List declarations = new List<>()
      .addAll(getDeclarationList())
      .addAll(program.getDeclarationList());

    return new Program(declarations);
  }
  
  /**
   * Injects the declarations of this program into another program.
   *
   * @param program Program to be injected.
   */
  public void Program.inject(Program program) {
    for (Declaration declaration : getDeclarationList()) {
      program.addDeclaration(declaration.fullCopy());
    }

    program.flushCache();
  }

}
