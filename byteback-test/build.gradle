import java.nio.file.Paths

def bytebackTestRoot = project(':byteback-test').projectDir

def client = project(':byteback-client')

subprojects { test ->

		def bytebackRoot = client.installDist.destinationDir

		def system = tasks.register('system') {
				def sourceDirs = project.sourceSets.main.allSource.srcDirs
				def targetProperty = project.findProperty("TEST_TARGET")
				def jobsProperty = project.findProperty("TEST_JOBS")
				def boogieTimeLimitProperty = project.findProperty("BOOGIE_TIME_LIMIT")
				def execute = { target, sourceDir ->
						test.exec {
								environment 'BYTEBACK_ROOT', bytebackRoot
								environment 'SOURCE_ROOT', sourceDir
								environment 'TEST_JAR', project.shadowJar.archivePath
								environment 'BOOGIE_TIME_LIMIT', boogieTimeLimitProperty
								commandLine 'lit', target, '-a', '-j', jobsProperty
						}
				}

				if (jobsProperty == null) {
						jobsProperty = 4
				}

				if (boogieTimeLimitProperty == null) {
						boogieTimeLimitProperty = 20
				}

				doLast {
						sourceDirs.each { sourceDir ->
								if (sourceDir.exists()) {
										if (targetProperty == null) {
												execute(sourceDir, sourceDir)
										} else {
												def targetPath = Paths.get(bytebackTestRoot.getCanonicalPath(), targetProperty).normalize()
												if (targetPath.startsWith(test.projectDir.getCanonicalPath())) {
														execute(targetPath, sourceDir)
												}
										}
								}
						}
				}

				dependsOn client.installDist
				dependsOn test.shadowJar
		}

}
